name: Deploy NGINX on Docker

on:
  push:
    branches:
      - main
      - develop

jobs:
  deploy-to-staging:
    runs-on: self-hosted
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Log in to Docker Hub for Staging
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push the image to Docker Hub for Staging
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USER }}/pk-docker-ngx:staging-latest
      - name: Configure AWS ECR credentials for Staging
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.STAGING_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STAGING_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.STAGING_AWS_REGION }}
      - name: Login Docker to Amazon ECR for Staging
        run: aws ecr get-login-password --region ${{ secrets.STAGING_AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.STAGING_ECR_REPO }}
      - name: Build, tag, and push image to Amazon ECR for Staging
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.STAGING_ECR_REPO }}/pk-docker-ngx:staging-latest

  deploy-to-production:
    runs-on: self-hosted
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Log in to Docker Hub for Production
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push the image to Docker Hub for Production
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USER }}/pk-docker-ngx:production-latest
      - name: Configure AWS ECR credentials for Production
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.PRODUCTION_AWS_REGION }}
      - name: Login Docker to Amazon ECR for Production
        run: aws ecr get-login-password --region ${{ secrets.PRODUCTION_AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.PRODUCTION_ECR_REPO }}
      - name: Build, tag, and push image to Amazon ECR for Production
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.PRODUCTION_ECR_REPO }}/pk-docker-ngx:production-latest
